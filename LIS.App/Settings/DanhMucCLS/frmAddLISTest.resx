<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnClear.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        LeQyxlPIx3kAAAAASUVORK5CYII=
</value>
  </data>
  <data name="btnClose.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1
        MAAA6mAAADqYAAAXb5JfxUYAAAAJcEhZcwAACxAAAAsQAa0jvXUAAAJvSURBVEhLndVLqE1RGMDxi0u4
        HjEReZQk79fAm2TCgEgoGRjoFuUtDJRMDWQgKTIgEwY3E5SIIneCkHBPKK8irwh5JP7/21qnddbZ596O
        wa/O+va31tpnPb7d0NhS6sx4bMRhnMFZHMEWTEVRn7LCYLAcN/A3+I6XeIGvIabbWIsuqBqnKoAhOAc7
        P8d+TEZ/NAb94D/bjccw9wpGoWK8igbG4SnssBdNyHNy3bEZv/AOM1F+niYOhX//CxaEWD2m4TU+YmyI
        lSdw/S7jD+aG2P+YAPfnDnoZiw/cJJdle2jnBuEgjuEUNqAbinLXwLF22DZgohtVghuYdxiN+7CTWjES
        eV7qOt6jyYZLYsdNyBNnwH2Jg/v2PZHn5VbD/KU29oXGCKRJS/AJPvsB89LnHRmAbzhuw9v5Fj0QE9bj
        J+Kbv8IBuA+HOrAL8cLdw01/XMWDEJSXJw5cr2foCse5hLaiCRbjDdKOHt+0XYuHpWoCi5cDpkvkjX6I
        2NGSsQIeiIUdmI64RHfR6g9rjYMMR5xAg+Fxi5NYawYizanFuuWFO2FjPhzAkpwn9kUL4iTelSnI83Ir
        Yf4yG140Oz5CXL+Ul+8o4iTWKo9wYXkOruED+sTAOtjZqpgmpmbDdV6EWag1wSo4lke2XIt8c2f9jYpy
        W6cx+AxLS29j6UM32XLr7Z0TYvWYBMuKE1hV2+N50kTE2rMT7W/RCfeoGZYTvwXzUH6eJkbDcB5O8gR7
        4Cezvb4HFjw/KtsQK61HuvyhiSoaGY/aLdhZlt82eFutXTHuhfSQFH4fqgIFXM+tOIkLuIjT8JT4maz1
        4UGp4R9hRi76WLM8YwAAAABJRU5ErkJggg==
</value>
  </data>
</root>